@model Erp.WebApp.ViewModels.CreateNotificationViewModel
@{
    ViewBag.Title = "Create Notification";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-plus-circle"></i> Create New Notification
                    </h4>
                </div>
                
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Notifications", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <h6><i class="fas fa-exclamation-triangle"></i> Please correct the following errors:</h6>
                                @Html.ValidationSummary(false, "", new { @class = "mb-0" })
                            </div>
                        }
                        
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Title, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Enter notification title", required = "required" })
                                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Message, new { @class = "form-label" })
                                    @Html.TextAreaFor(m => m.Message, new { @class = "form-control", rows = "4", placeholder = "Enter notification message", required = "required" })
                                    @Html.ValidationMessageFor(m => m.Message, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Type, new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.Type, (IEnumerable<SelectListItem>)ViewBag.NotificationTypes, "Select Type", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.Type, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Severity, new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.Severity, (IEnumerable<SelectListItem>)ViewBag.SeverityLevels, "Select Severity", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.Severity, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.TargetUrl, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.TargetUrl, new { @class = "form-control", placeholder = "Optional: URL to redirect when clicked" })
                                    @Html.ValidationMessageFor(m => m.TargetUrl, "", new { @class = "invalid-feedback" })
                                    <small class="form-text text-muted">Leave empty if no redirection is needed</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="card mt-4">
                            <div class="card-header">
                                <h6 class="card-title mb-0">Target Audience</h6>
                            </div>
                            <div class="card-body">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.TargetType, new { @class = "form-label" })
                                    <div class="form-check">
                                        @Html.RadioButtonFor(m => m.TargetType, "All", new { @class = "form-check-input", id = "targetAll" })
                                        <label class="form-check-label" for="targetAll">
                                            <i class="fas fa-users"></i> All Users
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        @Html.RadioButtonFor(m => m.TargetType, "Role", new { @class = "form-check-input", id = "targetRole" })
                                        <label class="form-check-label" for="targetRole">
                                            <i class="fas fa-user-tag"></i> Specific Role
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        @Html.RadioButtonFor(m => m.TargetType, "User", new { @class = "form-check-input", id = "targetUser" })
                                        <label class="form-check-label" for="targetUser">
                                            <i class="fas fa-user"></i> Specific User
                                        </label>
                                    </div>
                                </div>
                                
                                <div class="form-group" id="roleSelection" style="display: none;">
                                    @Html.LabelFor(m => m.TargetRole, new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.TargetRole, (IEnumerable<SelectListItem>)ViewBag.TargetRoles, "Select Role", new { @class = "form-control" })
                                </div>
                                
                                <div class="form-group" id="userSelection" style="display: none;">
                                    @Html.LabelFor(m => m.TargetUserId, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.TargetUserId, new { @class = "form-control", placeholder = "Enter User ID", type = "number" })
                                    <small class="form-text text-muted">Enter the specific user ID to target</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane"></i> Send Notification
                            </button>
                            <a href="@Url.Action("Index", "Notifications")" class="btn btn-secondary ml-2">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle target type selection
            $('input[name="TargetType"]').change(function() {
                var selectedType = $(this).val();
                
                $('#roleSelection, #userSelection').hide();
                
                if (selectedType === 'Role') {
                    $('#roleSelection').show();
                } else if (selectedType === 'User') {
                    $('#userSelection').show();
                }
            });
            
            // Set initial state
            var initialType = $('input[name="TargetType"]:checked').val();
            if (initialType === 'Role') {
                $('#roleSelection').show();
            } else if (initialType === 'User') {
                $('#userSelection').show();
            }
            
            // Form validation
            $('.needs-validation').on('submit', function(e) {
                var form = this;
                if (form.checkValidity() === false) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
            });
            
            // Preview notification
            $('#previewBtn').click(function() {
                var title = $('#Title').val();
                var message = $('#Message').val();
                var type = $('#Type').val();
                var severity = $('#Severity').val();
                
                if (title && message) {
                    var previewHtml = `
                        <div class="alert alert-info">
                            <h6><i class="fas fa-eye"></i> Notification Preview</h6>
                            <div class="notification-preview mt-2 p-3 border rounded">
                                <h6 class="mb-1">${title}</h6>
                                <p class="mb-1">${message}</p>
                                <small class="text-muted">
                                    <i class="fas fa-tag"></i> ${type || 'Not selected'} | 
                                    <i class="fas fa-exclamation-circle"></i> ${severity || 'Not selected'}
                                </small>
                            </div>
                        </div>
                    `;
                    $('#previewContainer').html(previewHtml);
                } else {
                    alert('Please enter title and message to preview');
                }
            });
        });
    </script>
}

@section Styles {
    <style>
        .form-label {
            font-weight: 600;
            color: #333;
        }
        
        .form-check {
            margin-bottom: 10px;
        }
        
        .form-check-label {
            margin-left: 5px;
        }
        
        .notification-preview {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
        }
        
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }
        
        .invalid-feedback {
            display: block;
        }
        
        .was-validated .form-control:invalid {
            border-color: #dc3545;
        }
        
        .was-validated .form-control:valid {
            border-color: #28a745;
        }
    </style>
}