@model Erp_V1.DAL.DAL.Notifications
@{
    ViewBag.Title = "Notification Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-info-circle"></i> Notification Details
                    </h4>
                    <div>
                        @if (!Model.IsRead)
                        {
                            <button class="btn btn-sm btn-outline-primary" onclick="markAsRead(@Model.Id)">
                                <i class="fas fa-check"></i> Mark as Read
                            </button>
                        }
                        @if (ViewBag.UserRole == "Admin")
                        {
                            <button class="btn btn-sm btn-outline-danger ml-2" onclick="deleteNotification(@Model.Id)">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        }
                    </div>
                </div>
                
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="notification-details">
                                <!-- Title -->
                                <div class="detail-section">
                                    <h5 class="detail-label">
                                        <i class="fas fa-heading"></i> Title
                                    </h5>
                                    <div class="detail-value">
                                        @Model.Title
                                    </div>
                                </div>
                                
                                <!-- Message -->
                                <div class="detail-section">
                                    <h6 class="detail-label">
                                        <i class="fas fa-comment"></i> Message
                                    </h6>
                                    <div class="detail-value message-content">
                                        @Html.Raw(Html.Encode(Model.Message).Replace("\n", "<br/>"))
                                    </div>
                                </div>
                                
                                <!-- Metadata Row -->
                                <div class="row mt-4">
                                    <div class="col-md-6">
                                        <div class="detail-section">
                                            <h6 class="detail-label">
                                                <i class="fas fa-tag"></i> Type
                                            </h6>
                                            <div class="detail-value">
                                                <span class="badge badge-info">@Model.Type</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="detail-section">
                                            <h6 class="detail-label">
                                                <i class="fas fa-exclamation-circle"></i> Severity
                                            </h6>
                                            <div class="detail-value">
                                                @{
                                                    var severityClass = "badge-secondary";
                                                    switch (Model.Severity?.ToLower())
                                                    {
                                                        case "high":
                                                            severityClass = "badge-danger";
                                                            break;
                                                        case "medium":
                                                            severityClass = "badge-warning";
                                                            break;
                                                        case "low":
                                                            severityClass = "badge-success";
                                                            break;
                                                    }
                                                }
                                                <span class="badge @severityClass">@(Model.Severity ?? "Normal")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Status and Timestamp Row -->
                                <div class="row mt-3">
                                    <div class="col-md-6">
                                        <div class="detail-section">
                                            <h6 class="detail-label">
                                                <i class="fas fa-eye"></i> Status
                                            </h6>
                                            <div class="detail-value">
                                                @if (Model.IsRead)
                                                {
                                                    <span class="badge badge-success">
                                                        <i class="fas fa-check-circle"></i> Read
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-warning">
                                                        <i class="fas fa-circle"></i> Unread
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="detail-section">
                                            <h6 class="detail-label">
                                                <i class="fas fa-clock"></i> Received
                                            </h6>
                                            <div class="detail-value">
                                                @Model.Timestamp.ToString("MMM dd, yyyy 'at' hh:mm tt")
                                                <small class="text-muted d-block">
                                                    (@Model.Timestamp.ToString("yyyy-MM-dd HH:mm:ss"))
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Target URL -->
                                @if (!string.IsNullOrEmpty(Model.TargetUrl))
                                {
                                    <div class="detail-section mt-3">
                                        <h6 class="detail-label">
                                            <i class="fas fa-link"></i> Related Link
                                        </h6>
                                        <div class="detail-value">
                                            <a href="@Model.TargetUrl" class="btn btn-outline-primary btn-sm" target="_blank">
                                                <i class="fas fa-external-link-alt"></i> Open Link
                                            </a>
                                        </div>
                                    </div>
                                }
                                
                                <!-- Related Entity -->
                                @if (!string.IsNullOrEmpty(Model.RelatedEntityType) && Model.RelatedEntityId.HasValue)
                                {
                                    <div class="detail-section mt-3">
                                        <h6 class="detail-label">
                                            <i class="fas fa-database"></i> Related Entity
                                        </h6>
                                        <div class="detail-value">
                                            <span class="badge badge-light">
                                                @Model.RelatedEntityType: @Model.RelatedEntityId
                                            </span>
                                        </div>
                                    </div>
                                }
                                
                                <!-- Employee ID (Admin only) -->
                                @if (ViewBag.UserRole == "Admin" && Model.EmployeeId.HasValue)
                                {
                                    <div class="detail-section mt-3">
                                        <h6 class="detail-label">
                                            <i class="fas fa-user"></i> Target Employee
                                        </h6>
                                        <div class="detail-value">
                                            <span class="badge badge-secondary">
                                                Employee ID: @Model.EmployeeId
                                            </span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="card-footer">
                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Index", "Notifications")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Notifications
                        </a>
                        
                        <div>
                            @if (!Model.IsRead)
                            {
                                <button class="btn btn-primary" onclick="markAsRead(@Model.Id)">
                                    <i class="fas fa-check"></i> Mark as Read
                                </button>
                            }
                            @if (ViewBag.UserRole == "Admin")
                            {
                                <a href="@Url.Action("Create", "Notifications")" class="btn btn-success ml-2">
                                    <i class="fas fa-plus"></i> Create New
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function getCsrfToken() {
            return $('input[name="__RequestVerificationToken"]').val();
        }
        function markAsRead(notificationId) {
            $.ajax({
                url: '@Url.Action("MarkAsRead", "Notifications")',
                type: 'POST',
                data: { id: notificationId, __RequestVerificationToken: getCsrfToken() },
                success: function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('Failed to mark notification as read');
                }
            });
        }
        function deleteNotification(notificationId) {
            if (confirm('Are you sure you want to delete this notification?')) {
                $.ajax({
                    url: '@Url.Action("Delete", "Notifications")',
                    type: 'POST',
                    data: { id: notificationId, __RequestVerificationToken: getCsrfToken() },
                    success: function(response) {
                        if (response.success) {
                            window.location.href = '@Url.Action("Index", "Notifications")';
                        } else {
                            alert('Error deleting: ' + (response.error || response.message));
                        }
                    },
                    error: function() {
                        alert('Failed to delete notification');
                    }
                });
            }
        }
    </script>
}

@section Styles {
    <style>
        .notification-details {
            padding: 20px 0;
        }
        
        .detail-section {
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #f0f0f0;
        }
        
        .detail-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }
        
        .detail-label {
            color: #666;
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 14px;
        }
        
        .detail-label i {
            margin-right: 8px;
            color: #007bff;
        }
        
        .detail-value {
            font-size: 16px;
            color: #333;
            line-height: 1.5;
        }
        
        .message-content {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            border-left: 4px solid #007bff;
        }
        
        .badge {
            font-size: 12px;
            padding: 6px 12px;
        }
        
        .card-footer {
            background-color: #f8f9fa;
            border-top: 1px solid #dee2e6;
        }
        
        .btn-sm {
            padding: 4px 8px;
            font-size: 12px;
        }
        
        media (max-width: 768px) {
            .detail-section {
                margin-bottom: 15px;
                padding-bottom: 10px;
            }
            
            .detail-value {
                font-size: 14px;
            }
            
            .card-footer .d-flex {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
}