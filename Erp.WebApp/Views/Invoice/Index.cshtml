@{
    ViewBag.Title = "Invoice #" + ViewBag.SaleIds;
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .invoice-container {
            max-width: 800px;
            margin: 30px auto;
            padding: 40px;
            background-color: #fff;
            border: 1px solid #dee2e6;
            box-shadow: 0 0 15px rgba(0,0,0,0.05);
        }

        .invoice-header {
            padding-bottom: 20px;
            border-bottom: 2px solid #0d6efd;
        }

        .invoice-footer {
            margin-top: 40px;
            text-align: center;
            font-size: 0.9em;
            color: #6c757d;
        }

        @@media print {
            body {
                background-color: #fff;
            }

            .invoice-container {
                margin: 0;
                padding: 0;
                border: none;
                box-shadow: none;
            }

            .no-print {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="container no-print mt-3 text-center">
        <button class="btn btn-primary" onclick="window.print();"><i class="bi bi-printer"></i> Print Invoice</button>
        <button id="emailInvoiceBtn" class="btn btn-success ms-2" onclick="emailInvoice()"><i class="bi bi-envelope"></i> Email Invoice</button>
        <a href="@Url.Action("Index", "Seller")" class="btn btn-secondary ms-2"><i class="bi bi-arrow-left"></i> Back to Sales</a>
    </div>

    <div id="invoice" class="invoice-container">
        <div class="text-center p-5">
            <div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>
            <p class="mt-2">Loading Invoice...</p>
        </div>
    </div>

    <script>
        const saleIds = '@ViewBag.SaleIds';

        document.addEventListener('DOMContentLoaded', async () => {
            const invoiceContainer = document.getElementById('invoice');
            if (!saleIds) {
                invoiceContainer.innerHTML = '<div class="alert alert-danger text-center">Error: No Transaction IDs were found.</div>';
                return;
            }
            try {
                // *** CHANGED HERE: Point to InvoiceController ***
                const response = await fetch(`/Invoice/GetInvoiceData?ids=${saleIds}`);
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to fetch invoice data.');
                }
                const data = await response.json();
                
                // Check if the response contains an error message
                if (data.message && !data.items) {
                    throw new Error(data.message);
                }
                
                renderInvoice(data);
            } catch (error) {
                invoiceContainer.innerHTML = `<div class="alert alert-danger text-center">Error: ${error.message}</div>`;
            }
        });

        function renderInvoice(data) {
            const invoiceContainer = document.getElementById('invoice');
            let itemsHtml = '';
            
            // Safety check to ensure items array exists
            if (!data.items || !Array.isArray(data.items)) {
                invoiceContainer.innerHTML = '<div class="alert alert-danger text-center">Error: Invalid invoice data structure.</div>';
                return;
            }
            
            data.items.forEach(item => {
                itemsHtml += `
                    <tr>
                        <td>${item.productName}</td>
                        <td class="text-center">${item.quantity}</td>
                        <td class="text-end">$${item.unitPrice.toFixed(2)}</td>
                        <td class="text-end text-danger">-$${item.discount.toFixed(2)}</td>
                        <td class="text-end fw-bold">$${item.lineTotal.toFixed(2)}</td>
                    </tr>`;
            });
            invoiceContainer.innerHTML = `
                <div class="invoice-header row mb-4 align-items-center">
                    <div class="col-6"><h1 class="text-primary mb-0">INVOICE</h1></div>
                    <div class="col-6 text-end"><h4>ERP System</h4><p class="mb-0">Damascus, Syria</p></div>
                </div>
                <div class="row mb-4">
                    <div class="col-sm-6"><strong>BILLED TO:</strong><address class="mb-0">${data.customerName}<br>${data.customerAddress || 'N/A'}<br>${data.customerPhone || 'N/A'}</address></div>
                    <div class="col-sm-6 text-sm-end mt-3 mt-sm-0"><strong>Date:</strong> ${new Date(data.saleDate).toLocaleDateString()}</div>
                </div>
                <table class="table table-bordered">
                    <thead class="table-light"><tr><th>Item Description</th><th class="text-center">Quantity</th><th class="text-end">Unit Price</th><th class="text-end">Discount</th><th class="text-end">Total</th></tr></thead>
                    <tbody>${itemsHtml}</tbody>
                    <tfoot><tr><td colspan="4" class="text-end border-0"><strong>Grand Total</strong></td><td class="text-end border-0 fw-bold fs-5">$${data.grandTotal.toFixed(2)}</td></tr></tfoot>
                </table>
                <div class="invoice-footer"><p>Thank you for your business!</p></div>`;
        }

        async function emailInvoice() {
            if (!saleIds) {
                alert('Error: Could not find the Transaction IDs to email.');
                return;
            }
            const button = document.getElementById('emailInvoiceBtn');
            const originalHtml = button.innerHTML;
            try {
                button.disabled = true;
                button.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Sending...';
                // *** CHANGED HERE: Point to InvoiceController ***
                const response = await fetch(`/Invoice/EmailInvoice?ids=${saleIds}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                const result = await response.json();
                if (!response.ok || !result.success) {
                    throw new Error(result.message || 'An unknown error occurred.');
                }
                alert(result.message);
            } catch (error) {
                alert(`Error: ${error.message}`);
            } finally {
                button.disabled = false;
                button.innerHTML = originalHtml;
            }
        }
    </script>
</body>
</html>