<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - ERP System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

    @*
        ===================================================
        ==      ADD THIS LINE HERE TO FIX THE ERROR      ==
        ===================================================
    *@
    @RenderSection("Styles", required: false)

    @{
        var authService = new Erp.WebApp.Services.AuthService();
    }
    <style>
        :root {
            --sidebar-bg: #1a1d27;
            --sidebar-link-color: #c2c4d1;
            --sidebar-link-hover: #ffffff;
            --sidebar-link-active: #667eea;
            --page-bg: #f1f3f8;
            --main-text: #343a40;
        }

        body {
            background-color: var(--page-bg);
            color: var(--main-text);
            display: flex;
        }

        #sidebar {
            width: 250px;
            background: var(--sidebar-bg);
            color: white;
            min-height: 100vh;
            position: fixed;
            transition: all 0.3s;
        }

            #sidebar .sidebar-header {
                padding: 20px;
                background: #0f1118;
                text-align: center;
            }

                #sidebar .sidebar-header h3 {
                    color: #fff;
                    font-weight: 700;
                }

                    #sidebar .sidebar-header h3 i {
                        margin-right: 10px;
                        color: var(--sidebar-link-active);
                    }

            #sidebar ul.components {
                padding: 20px 0;
                border-bottom: 1px solid #47748b;
            }

            #sidebar ul p {
                color: #fff;
                padding: 10px;
            }

            #sidebar ul li a {
                padding: 15px 20px;
                font-size: 1.1em;
                display: block;
                color: var(--sidebar-link-color);
                transition: all 0.3s;
            }

                #sidebar ul li a i {
                    margin-right: 15px;
                    width: 20px;
                    text-align: center;
                }

                #sidebar ul li a:hover {
                    color: var(--sidebar-link-hover);
                    background: #272c3d;
                    text-decoration: none;
                }

            #sidebar ul li.active > a, a[aria-expanded="true"] {
                color: #fff;
                background: var(--sidebar-link-active);
            }

        #content {
            width: calc(100% - 250px);
            padding: 20px;
            margin-left: 250px;
            min-height: 100vh;
            transition: all 0.3s;
        }

        #topbar {
            padding: 15px 10px;
            background: #fff;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        
        /* Notification Styles */
        .notification-bell {
            position: relative;
            margin-right: 20px;
        }
        
        .notification-bell .badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #dc3545;
            color: white;
            border-radius: 50%;
            padding: 2px 6px;
            font-size: 10px;
            min-width: 18px;
            text-align: center;
        }
        
        .notification-dropdown {
            width: 350px;
            max-height: 400px;
            overflow-y: auto;
        }
        
        .notification-item {
            padding: 12px 16px;
            border-bottom: 1px solid #f0f0f0;
            transition: background-color 0.2s;
        }
        
        .notification-item:hover {
            background-color: #f8f9fa;
        }
        
        .notification-item.unread {
            background-color: #e3f2fd;
            border-left: 3px solid #2196f3;
        }
        
        .notification-title {
            font-weight: 600;
            font-size: 14px;
            margin-bottom: 4px;
        }
        
        .notification-message {
            font-size: 12px;
            color: #666;
            margin-bottom: 4px;
        }
        
        .notification-time {
            font-size: 11px;
            color: #999;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <nav id="sidebar">
        <div class="sidebar-header">
            <h3><i class="fas fa-rocket"></i>ERP NextGen</h3>
        </div>

        <ul class="list-unstyled components">
            @if (authService.IsAuthenticated)
            {
                if (authService.UserRole == "Admin")
                {
                    <li class="@(ViewBag.Title == "Admin Dashboard" ? "active" : "")">
                        @Html.ActionLink("Dashboard", "Index", "Admin", null, new { area = "" })
                    </li>
                    <li class="@(ViewBag.Title.Contains("Sales") || ViewBag.Title.Contains("Sale") ? "active" : "")">
                        @Html.ActionLink("Sales", "Index", "Seller", null, new { area = "" })
                    </li>
                    <li class="@(ViewBag.Title == "Partial Payment Sales" ? "active" : "")">
                        <a href="@Url.Action("Index", "PartialPayment")">
                            <i class="fas fa-coins"></i> Partial Payment Sales
                        </a>
                    </li>
                    <li class="@(ViewBag.Title.Contains("Notification") ? "active" : "")">
                        <a href="@Url.Action("Index", "Notifications")">
                            <i class="fas fa-bell"></i> Notifications
                        </a>
                    </li>
                    <li class="@(ViewBag.Title == "Invoice Management" ? "active" : "")">
                        <a href="@Url.Action("Index", "InvoiceManagement")">
                            <i class="fas fa-file-invoice"></i> Invoice Management
                        </a>
                    </li>
                    <li class="@(ViewBag.Title.Contains("Notification") ? "active" : "")">
                        <a href="@Url.Action("Index", "Notifications")">
                            <i class="fas fa-bell"></i> Notifications
                        </a>
                    </li>

                    <!-- Add more admin links here -->
                }
                else if (authService.UserRole == "Seller")
                {
                    <li class="@(ViewBag.Title.Contains("Sales") || ViewBag.Title.Contains("Sale") ? "active" : "")">
                        @Html.ActionLink("Sales", "Index", "Seller", null, new { area = "" })
                    </li>
                    <li class="@(ViewBag.Title == "Sales Management Dashboard" ? "active" : "")">
                        <a href="@Url.Action("Index", "SalesManagement")">
                            <i class="fas fa-chart-line"></i> Sales Management
                        </a>
                    </li>
                    <li class="@(ViewBag.Title == "Partial Payment Sales" ? "active" : "")">
                        <a href="@Url.Action("Index", "PartialPayment")">
                            <i class="fas fa-coins"></i> Partial Payment Sales
                        </a>
                    </li>
                }
            }
        </ul>
    </nav>

    <!-- Page Content -->
    <div id="content">
        <nav class="navbar navbar-expand-lg navbar-light" id="topbar">
            <div class="container-fluid d-flex justify-content-end">
                @if (authService.IsAuthenticated)
                {
                    <div class="d-flex align-items-center">
                        <div class="text-dark me-3">
                            Welcome, <strong>@authService.UserRole</strong>
                        </div>
                        
                        <!-- Notification Bell -->
                        <div class="notification-bell dropdown">
                            <a href="#" class="btn btn-outline-primary position-relative" id="notificationDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-bell"></i>
                                <span class="badge" id="notificationCount" style="display: none;">0</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end notification-dropdown" aria-labelledby="notificationDropdown">
                                <li class="dropdown-header d-flex justify-content-between align-items-center">
                                    <span>Notifications</span>
                                    <a href="@Url.Action("Index", "Notifications")" class="btn btn-sm btn-outline-primary">View All</a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <div id="notificationList">
                                    <li class="notification-item text-center text-muted py-3">
                                        <i class="fas fa-bell-slash"></i><br>
                                        No new notifications
                                    </li>
                                </div>
                                <li><hr class="dropdown-divider"></li>
                                <li class="text-center p-2">
                                    <a href="@Url.Action("Settings", "Notifications")" class="btn btn-sm btn-secondary">
                                        <i class="fas fa-cog"></i> Settings
                                    </a>
                                </li>
                            </ul>
                        </div>
                        
                        @using (Html.BeginForm("Logout", "Home", FormMethod.Post, new { id = "logoutForm" }))
                        {
                            @Html.AntiForgeryToken()
                            <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-outline-danger">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                        }
                    </div>
                }
                else
                {
                    @Html.ActionLink("Login", "Login", "Home", null, new { @class = "btn btn-outline-success" })
                }
            </div>
        </nav>

        <main>
            @RenderBody()
        </main>

        <footer class="text-center mt-4">
            <p>&copy; @DateTime.Now.Year - Modern ERP System</p>
        </footer>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    @if (ViewContext.HttpContext.User.Identity.IsAuthenticated)
    {
        <script>
            // Global AJAX setup for anti-forgery token
            $(document).ready(function() {
                // Get the anti-forgery token from meta tag or hidden input
                var token = $('input[name="__RequestVerificationToken"]').val();
                if (!token) {
                    // Try to get from meta tag if it exists
                    token = $('meta[name="__RequestVerificationToken"]').attr('content');
                }
                
                // If we have a token, set it up globally for all AJAX requests
                if (token) {
                    $.ajaxSetup({
                        beforeSend: function(xhr, settings) {
                            if (settings.type === 'POST' && settings.url.indexOf('/Notifications/') !== -1) {
                                xhr.setRequestHeader('RequestVerificationToken', token);
                                // Also add to data if not already present
                                if (settings.data && settings.data.indexOf('__RequestVerificationToken') === -1) {
                                    settings.data += (settings.data ? '&' : '') + '__RequestVerificationToken=' + encodeURIComponent(token);
                                }
                            }
                        }
                    });
                }
            });
        </script>
    }
    
    <!-- SignalR JavaScript Client -->
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/signalr/hubs"></script>
    
    @if (authService.IsAuthenticated)
    {
        <script>
            $(document).ready(function() {
                // Initialize SignalR connection using v2.x syntax
                var connection = $.hubConnection('/signalr', {
                    qs: 'access_token=@authService.Token'
                });
                
                // Create notification hub proxy
                var notificationHub = connection.createHubProxy('notificationHub');
                
                // Start connection
                connection.start().done(function () {
                    console.log('SignalR Connected');
                    
                    // Join notification group based on user role
                    var userRole = '@authService.UserRole';
                    notificationHub.invoke('JoinNotificationGroup', userRole);
                    
                    // Load initial notifications
                    loadNotifications();
                }).fail(function (err) {
                    console.error('SignalR Connection Error: ', err);
                });
                
                // Listen for new notifications using correct event name
                notificationHub.on('receiveNotification', function (notification) {
                    addNotificationToDropdown(notification);
                    updateNotificationCount();
                    
                    // Show toast notification
                    showToastNotification(notification);
                });
                
                // Load notifications function
                function loadNotifications() {
                    $.ajax({
                        url: '@Url.Action("GetLatest", "Notifications")',
                        type: 'GET',
                        success: function(notifications) {
                            $('#notificationList').empty();
                            
                            if (notifications && notifications.length > 0) {
                                notifications.forEach(function(notification) {
                                    addNotificationToDropdown(notification);
                                });
                            } else {
                                $('#notificationList').html('<li class="notification-item text-center text-muted py-3"><i class="fas fa-bell-slash"></i><br>No new notifications</li>');
                            }
                            
                            updateNotificationCount();
                        },
                        error: function() {
                            console.error('Failed to load notifications');
                        }
                    });
                }
                
                // Add notification to dropdown
                function addNotificationToDropdown(notification) {
                    var timeAgo = getTimeAgo(new Date(notification.timestamp || notification.Timestamp));
                    var unreadClass = (notification.isRead || notification.IsRead) ? '' : 'unread';
                    
                    var id = notification.id || notification.Id;
                    var title = notification.title || notification.Title;
                    var message = notification.message || notification.Message;
                    
                    var notificationHtml = `
                        <li class="notification-item ${unreadClass}" data-id="${id}">
                            <div class="notification-title">${title}</div>
                            <div class="notification-message">${message}</div>
                            <div class="notification-time">${timeAgo}</div>
                        </li>
                    `;
                    
                    $('#notificationList').prepend(notificationHtml);
                    
                    // Limit to 10 notifications in dropdown
                    $('#notificationList .notification-item').slice(10).remove();
                }
                
                // Update notification count
                function updateNotificationCount() {
                    $.ajax({
                        url: '@Url.Action("GetUnreadCount", "Notifications")',
                        type: 'GET',
                        success: function(count) {
                            if (count > 0) {
                                $('#notificationCount').text(count).show();
                            } else {
                                $('#notificationCount').hide();
                            }
                        }
                    });
                }
                
                // Show toast notification
                function showToastNotification(notification) {
                    // Create toast element if it doesn't exist
                    if ($('#notificationToast').length === 0) {
                        $('body').append(`
                            <div class="toast-container position-fixed top-0 end-0 p-3">
                                <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                                    <div class="toast-header">
                                        <i class="fas fa-bell text-primary me-2"></i>
                                        <strong class="me-auto">New Notification</strong>
                                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                                    </div>
                                    <div class="toast-body"></div>
                                </div>
                            </div>
                        `);
                    }
                    
                    // Update toast content and show
                    var title = notification.title || notification.Title;
                    var message = notification.message || notification.Message;
                    $('#notificationToast .toast-body').html(`<strong>${title}</strong><br>${message}`);
                    var toast = new bootstrap.Toast(document.getElementById('notificationToast'));
                    toast.show();
                }
                
                // Helper function to get time ago
                function getTimeAgo(date) {
                    var now = new Date();
                    var diffMs = now - date;
                    var diffMins = Math.floor(diffMs / 60000);
                    var diffHours = Math.floor(diffMins / 60);
                    var diffDays = Math.floor(diffHours / 24);
                    
                    if (diffMins < 1) return 'Just now';
                    if (diffMins < 60) return diffMins + ' min ago';
                    if (diffHours < 24) return diffHours + ' hour' + (diffHours > 1 ? 's' : '') + ' ago';
                    return diffDays + ' day' + (diffDays > 1 ? 's' : '') + ' ago';
                }
                
                // Handle notification click
                $(document).on('click', '.notification-item', function() {
                    var notificationId = $(this).data('id');
                    if (notificationId) {
                        window.location.href = '@Url.Action("Details", "Notifications")/' + notificationId;
                    }
                });
                
                // Refresh notifications every 30 seconds
                setInterval(function() {
                    updateNotificationCount();
                }, 30000);
            });
        </script>
    }
    
    @RenderSection("scripts", required: false)
</body>
</html>